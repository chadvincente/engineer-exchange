IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_USR_POSTS')
DROP PROCEDURE SP_GET_USR_POSTS

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_USR_POSTS
@usrID integer

AS 
BEGIN

SET NOCOUNT ON;

SELECT POST_ID,POST_TXT,POST_TITLE,ROW_CRT_TS,POST_SCOPE_CD,TO_GRP_ID,TO_USR_ID
FROM T_POST WHERE ROW_CRT_USR_ID = @usrID AND POST_SCOPE_CD = 1
ORDER BY ROW_CRT_TS DESC

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_USR_FEED')
DROP PROCEDURE SP_GET_USR_FEED

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_USR_FEED
@usrID integer

AS 
BEGIN

SET NOCOUNT ON;

SELECT POST_ID,POST_TXT,POST_TITLE,ROW_CRT_USR_ID,USR_NM,USR_LOGIN,P.ROW_CRT_TS,POST_SCOPE_CD,
TO_GRP_ID,TO_USR_ID,GRP_NM
FROM T_POST P INNER JOIN T_USR U ON P.ROW_CRT_USR_ID = U.USR_ID LEFT JOIN T_GRP G ON P.TO_GRP_ID = G.GRP_ID
WHERE (POST_SCOPE_CD = 1 AND TO_USR_ID = @usrID) OR
(POST_SCOPE_CD = 2 AND @usrID IN (SELECT USR_ID FROM T_USR_GRP UG WHERE UG.GRP_ID = TO_GRP_ID) AND 
P.ROW_CRT_TS >= (SELECT IUG.ROW_CRT_TS FROM T_USR_GRP IUG WHERE IUG.USR_ID = U.USR_ID AND IUG.GRP_ID = G.GRP_ID))
OR (POST_SCOPE_CD = 3 AND P.ROW_CRT_TS >= U.ROW_CRT_TS)
ORDER BY P.ROW_CRT_TS DESC

END
GO

------------------------------------------------------------------------


IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_POST_READS')
DROP PROCEDURE SP_GET_POST_READS

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_POST_READS
@postID integer

AS 
BEGIN

SET NOCOUNT ON;

SELECT P.USR_ID,USR_NM,USR_LOGIN, P.ROW_CRT_TS
FROM T_POST_READS P INNER JOIN T_USR U ON P.USR_ID = U.USR_ID
WHERE POST_ID = @postID
ORDER BY P.ROW_CRT_TS DESC

END
GO

------------------------------------------------------------------------


IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_USR_GROUPS')
DROP PROCEDURE SP_GET_USR_GROUPS

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_USR_GROUPS
@usrID integer

AS 
BEGIN

SET NOCOUNT ON;

SELECT G.GRP_ID,GRP_NM,UG.ROW_CRT_TS
FROM T_GRP G INNER JOIN T_USR_GRP UG ON G.GRP_ID = UG.GRP_ID 
WHERE USR_ID = @usrID
ORDER BY ROW_CRT_TS DESC

END
GO

------------------------------------------------------------------------


IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_SAVE_USR')
DROP PROCEDURE SP_SAVE_USR

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_SAVE_USR
@usrName nvarchar(200),
@usrLogin nvarchar(200),
@usrID integer OUTPUT

AS 
BEGIN

SET NOCOUNT ON;

INSERT INTO T_USR (USR_NM,USR_LOGIN) VALUES (@usrName,@usrLogin)

SET @usrID = SCOPE_IDENTITY()

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_UPDT_USR')
DROP PROCEDURE SP_UPDT_USR

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_UPDT_USR
@usrID integer,
@usrName nvarchar(200)

AS 
BEGIN

SET NOCOUNT ON;

UPDATE T_USR SET USR_NM = @usrName WHERE USR_ID = @usrID

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_USR_BY_INT')
DROP PROCEDURE SP_GET_USR_BY_INT

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_USR_BY_INT
@usrID integer

AS 
BEGIN

SET NOCOUNT ON;

SELECT USR_NM,USR_LOGIN,ROW_CRT_TS FROM T_USR WHERE USR_ID = @usrID

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_USR_BY_LOGIN')
DROP PROCEDURE SP_GET_USR_BY_LOGIN

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_USR_BY_LOGIN
@login nvarchar(200)

AS 
BEGIN

SET NOCOUNT ON;

SELECT USR_NM,USR_ID,ROW_CRT_TS FROM T_USR WHERE USR_LOGIN = @login

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_GRP')
DROP PROCEDURE SP_GET_GRP

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_GRP
@grpID integer

AS 
BEGIN

SET NOCOUNT ON;

SELECT GRP_NM,ROW_CRT_TS FROM T_GRP WHERE GRP_ID = @grpID

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_SAVE_GRP')
DROP PROCEDURE SP_SAVE_GRP

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_SAVE_GRP
@grpName nvarchar(200),
@grpID integer OUTPUT

AS 
BEGIN

SET NOCOUNT ON;

INSERT INTO T_GRP (GRP_NM) VALUES (@grpName)

SET @grpID = SCOPE_IDENTITY()

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_GRP_POSTS')
DROP PROCEDURE SP_GET_GRP_POSTS

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_GRP_POSTS
@grpID integer

AS 
BEGIN

SET NOCOUNT ON;

SELECT POST_ID,POST_TXT,POST_TITLE,P.ROW_CRT_TS,ROW_CRT_USR_ID,POST_SCOPE_CD,TO_GRP_ID,TO_USR_ID,
USR_NM,USR_LOGIN
FROM T_POST P INNER JOIN T_USR U ON P.ROW_CRT_USR_ID = U.USR_ID
WHERE POST_SCOPE_CD = 2 AND TO_GRP_ID = @grpID
ORDER BY P.ROW_CRT_TS DESC

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_GRP_USRS')
DROP PROCEDURE SP_GET_GRP_USRS

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_GRP_USRS
@grpID integer

AS 
BEGIN

SET NOCOUNT ON;

SELECT G.USR_ID,USR_NM,USR_LOGIN,G.ROW_CRT_TS FROM T_USR_GRP G INNER JOIN T_USR U ON G.USR_ID = U.USR_ID
WHERE GRP_ID = @grpID ORDER BY G.ROW_CRT_TS DESC

END
GO

------------------------------------------------------------------------


IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_GRPS')
DROP PROCEDURE SP_GET_GRPS

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_GRPS

AS 
BEGIN

SET NOCOUNT ON;

SELECT GRP_ID,GRP_NM,ROW_CRT_TS FROM T_GRP
ORDER BY ROW_CRT_TS DESC

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_GET_USRS')
DROP PROCEDURE SP_GET_USRS

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_GET_USRS

AS 
BEGIN

SET NOCOUNT ON;

SELECT USR_ID,USR_NM,USR_LOGIN,ROW_CRT_TS FROM T_USR
ORDER BY ROW_CRT_TS DESC

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_SAVE_POST')
DROP PROCEDURE SP_SAVE_POST

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_SAVE_POST
@postText nvarchar(max),
@title nvarchar(200),
@crtUsrID integer,
@scope integer,
@grpID integer,
@toUsrID integer,
@postID integer OUTPUT

AS 
BEGIN

SET NOCOUNT ON;

INSERT INTO T_POST (POST_TXT,POST_TITLE,ROW_CRT_USR_ID,POST_SCOPE_CD,TO_GRP_ID,TO_USR_ID)
VALUES (@postText,@title,@crtUsrID,@scope,@grpID,@toUsrID)

SET @postID = SCOPE_IDENTITY()

END
GO

------------------------------------------------------------------------


IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_SAVE_READ')
DROP PROCEDURE SP_SAVE_READ

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_SAVE_READ
@usrID integer,
@postID integer

AS 
BEGIN

SET NOCOUNT ON;

INSERT INTO T_POST_READS (POST_ID,USR_ID)
VALUES (@postID,@usrID)

END
GO

------------------------------------------------------------------------

IF EXISTS
(SELECT * FROM sys.objects
WHERE NAME = 'SP_JOIN_GRP')
DROP PROCEDURE SP_JOIN_GRP

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE SP_JOIN_GRP
@grpID integer,
@usrID integer

AS 
BEGIN

SET NOCOUNT ON;

INSERT INTO T_USR_GRP (USR_ID,GRP_ID) VALUES (@usrID,@grpID)

END
GO

------------------------------------------------------------------------
